<?php

use Drupal\Core\Render\AttachmentsInterface;

/**
 * Attach CSS only when ancient_locations view is rendered.
 */
function ancient_location_qr_preprocess_views_view_fields(&$variables) {
  if ($variables['view']->id() === 'ancient_locations') {
    $variables['#attached']['library'][] = 'ancient_location_qr/qr_view_styles';
  }
}



/**
 * Implements hook_theme().
 */
function ancient_location_qr_theme($existing, $type, $theme, $path) {
  // Get the module path without drupal_get_path() (deprecated).
  $module_path = \Drupal::service('extension.list.module')->getPath('ancient_location_qr');

  return [
    // Theme hook name MUST match the @ViewsStyle(theme=...) in your plugin,
    // but underscores will become dashes in the file name.
    // Plugin uses: theme = "ancient_locations_inline"
    'ancient_locations_inline' => [
      'render element' => 'elements',
      // This tells Twig to look for "ancient-locations-inline.html.twig".
      'template' => 'ancient-locations-inline',
      'path' => $module_path . '/templates',
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK() for views_view.
 */
function ancient_location_qr_preprocess_views_view(array &$variables) {
  if (
    isset($variables['view'])
    && $variables['view']->id() === 'ancient_locations'
    && isset($variables['view']->current_display)
    && $variables['view']->current_display === 'ancient_locations_block'
  ) {
    $variables['#attached']['library'][] = 'ancient_location_qr/qr_view_styles';
  }
}
